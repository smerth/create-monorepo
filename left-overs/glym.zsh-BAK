#!/bin/zsh

# IMPORTANT! - First use GH CLI (gh repo create) to create 
# a repository on GitHub and clone it locally

# Requirements
# Node is installed and yarn is installed globally

# TODO:
# ask for independant versioning for lerna init
# ask for args of lerna create

# Ask for GitHub Org name
GITHUB_ORG=$(gum input --placeholder "What is the name of your GitHub org?")

# Ask for repository name
REPO_NAME=$(gum input --placeholder "What is the name of the repo you just created?")

# Ask for Node version of the project
NODE_VERSION=$(gum input --placeholder "What version of node would you like to use? (eg: v16)")

# CD into repository folder
cd $REPO_NAME

# Check working directory
# echo "Your current working directory has been changed to: $(pwd)"

# Add .nvmrc
touch .nvmrc

# append node version to .nvmrc
echo $NODE_VERSION > .nvmrc

# reload .zshrc to load correct node version
source ~/.zshrc

# install yarn
# npm add -g yarn

# init npm (choose defaults, add description, mark as private)
yarn init

# ADD WORKSPACES KEY TO PACKAGE.JSON
zsh ../add-workspaces-to-package-json.zsh

# install lerna at workspace root
yarn add lerna -W

# Initialize lerna using packages workspace
lerna init --packages="packages/*"

# EDIT LERNA CONFIG TO PUBLISH TO GITHUB PACKAGE REGISTRY
zsh ../edit-lerna-json-with-jq.zsh

# ADD PACKAGES USING LERNA
zsh ../add-packages-with-lerna.zsh $GITHUB_ORG

# Add .npmrc to .gitignore
echo ".npmrc" >> .gitignore

# Add .npmrc
touch .npmrc

# Content to add to .npmrc
read -r -d '' NPMRC_CONTENT << EOM
//npm.pkg.github.com/:_authToken=TOKEN
@${GITHUB_ORG}:registry=https://npm.pkg.github.com
EOM

# Add content to .npmrc
echo $NPMRC_CONTENT > .npmrc

################
# To publish to GitHub Package Registry
# you need to login using a PAT
# and add PAT token to .npmrc
################