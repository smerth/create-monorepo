#!/bin/zsh

SCRIPT_DIR=$(dirname "$0")

# source $SCRIPT_DIR/gum-ui/colors.zsh

source $SCRIPT_DIR/steps/0-get-options.zsh

# print "***************"
# print "answers in main"
# print "***************"

# print $GITHUB_ORG
# print $REPO_NAME
# print $REPO_DESCRIPTION
# print $NODE_VERSION
# print $PACKAGE_NAMES
# print $APPS

# create a new remote repository and clone it locally
gh repo create $REPO_NAME \
    --add-readme \
    --private \
    --clone \
    --description $REPO_DESCRIPTION \
    --gitignore "Node" \
    --license "MIT"

cd $REPO_NAME

# Ask Questions
# **************
# if [ $? = 0 ]; then source $SCRIPT_DIR/1-ask-questions.zsh; fi

# Ask Questions
# **************
# if [ $? = 0 ]; then source $SCRIPT_DIR/../utility/get-answers.zsh; fi

# Get answers from monorepo-options.json

# Retrieve answers from the monorepo-options.json file
# ****************************************************
# github_org=$(cat monorepo-options.json | jq .org_name)
# repo=$(cat monorepo-options.json | jq .repo_name)
# node_vers=$(cat monorepo-options.json | jq -r .node_version)
# package_names=$(cat monorepo-options.json | jq .packages)
# applications=$(cat monorepo-options.json | jq -r .apps)

# Add nvmrc
# *********
zsh $SCRIPT_DIR/2-add-nvmrc.zsh "$node_vers"

# Add npmrc
# *********
# TODO: Add npmrc with config for publishing to private repos
zsh $SCRIPT_DIR/3-add-npmrc.zsh

# Initiate yarn
# *************
zsh $SCRIPT_DIR/4-run-yarn-init.zsh

# Add workspaces to package.json
# ******************************
zsh $SCRIPT_DIR/5-add-workspaces-key.zsh

# Install and initialize lerna
# ****************************
zsh $SCRIPT_DIR/6-run-lerna-init.zsh

# Add publish config to lerna
# ***************************
zsh $SCRIPT_DIR/7-add-lerna-publish-config.zsh

# Add packages
# ************
if (($(echo $package_names | jq " . | length") != 0)); then zsh $SCRIPT_DIR/steps/8-add-packages.zsh "$package_names"; fi

# Add apps
# ********
if (($(echo $applications | jq " . | length") != 0)); then zsh $SCRIPT_DIR/steps/9-add-apps.zsh $applications; fi

# Reinstall dependancies
# **********************
